import{c as C,a as v,t as _}from"../chunks/disclose-version.7j4NRPBk.js";import"../chunks/legacy.gulogbkn.js";import{p as ra,f as j,a as oa,b as s,g as a,m as u,c as n,r as l,s as o,a6 as ia,t as M}from"../chunks/runtime.ZI_R2Xfb.js";import{s as J,e as N}from"../chunks/render.yomwAJcy.js";import{o as na,i as q}from"../chunks/index-client.Dt-sng6h.js";import{e as la,i as ca}from"../chunks/each.CPujStf3.js";import{r as z,s as L,b as B}from"../chunks/input.BcYwlR1Q.js";import{i as da}from"../chunks/lifecycle.D8EBLbuJ.js";import{g as pa}from"../chunks/entry.CpjZhbAO.js";import{u as va,r as g,a as E,b as ua}from"../chunks/state.svelte.DzVwBfPL.js";var fa=_('<h1 class="svelte-15i8pkp">Loading...</h1>'),ha=_('<div class="input-group"><label>Podcast GUID</label> <input type="text"></div>'),ma=_('<h1 class="svelte-15i8pkp"> </h1> <div><button class="svelte-15i8pkp">Save Settings</button></div> <div class="input-group"><label for="alby-access-token">Alby Access Token</label> <input type="password" id="alby-access-token"> <span class="svelte-15i8pkp"> </span></div> <h3 class="svelte-15i8pkp">Approved Podcast GUIDs</h3> <div><button class="svelte-15i8pkp">Add GUID</button></div> <!>',1),ga=_('<h2>Log in with <a id="alby-login">Alby</a></h2>');function ja(F,H){ra(H,!1),va.name;let P=u(""),$=u(!0),c=u(),y=u(""),w=u(!1),r=u([""]);na(async()=>{s(P,`https://getalby.com/oauth?client_id=${ua}&response_type=code&redirect_uri=${E}&scope=account:read%20balance:read%20payments:send%20invoices:read`),await K(),s($,!1),console.log("DOM is fully loaded")});async function K(){console.log(g),s(c,null);const e=new URL(window.location.href).searchParams.get("code");if(e)try{const f=await(await fetch(`${g}/alby/auth?code=${e}&redirect_uri=${E}`,{credentials:"include"})).json();s(c,f.lightning_address);const h=new URL(window.location);h.searchParams.delete("code"),pa(h.pathname+h.search,{replaceState:!0}),await D()}catch(i){console.error(i)}else try{const f=await(await fetch(`${g}/alby/refresh`,{credentials:"include"})).json();s(c,f.lightning_address),await D()}catch{}}async function D(){try{const e=await(await fetch(`${g}/fetch-settings`,{credentials:"include"})).json();console.log(e),s(w,e.albyAccessToken),s(r,e.approvedGuids)}catch{}}async function Q(){console.log("Reset password for:",a(c));const t={albyAccessToken:a(y),approvedGuids:a(r)};(await(await fetch(g+"/save-settings",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).json()).status==="saved"&&(s(w,!0),alert("Setting Saved"))}da();var I=C(),V=j(I);{var W=t=>{var e=fa();v(t,e)},X=t=>{var e=C(),i=j(e);{var f=d=>{var p=ma(),m=j(p),Y=n(m,!0);l(m);var k=o(m,2),Z=n(k);l(k);var S=o(k,2),A=o(n(S),2);z(A);var R=o(A,2),aa=n(R,!0);l(R),l(S);var U=o(S,4),ea=n(U);l(U);var ta=o(U,2);la(ta,1,()=>a(r),ca,(x,ba,b)=>{var G=ha(),O=n(G);L(O,"for",`guid=${b}`);var T=o(O,2);z(T),L(T,"id",`guid=${b}`),l(G),B(T,()=>a(r)[b],sa=>(a(r)[b]=sa,ia(()=>a(r)))),v(x,G)}),M(()=>{J(Y,a(c)),J(aa,a(w)?"saved":"")}),N("click",Z,Q),B(A,()=>a(y),x=>s(y,x)),N("click",ea,()=>{a(r).unshift(""),s(r,a(r))}),v(d,p)},h=d=>{var p=ga(),m=o(n(p));l(p),M(()=>L(m,"href",a(P))),v(d,p)};q(i,d=>{a(c)?d(f):d(h,!1)},!0)}v(t,e)};q(V,t=>{a($)?t(W):t(X,!1)})}v(F,I),oa()}export{ja as component};
